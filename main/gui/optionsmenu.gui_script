

function final(self)
    msg.post(".", "release_input_focus")
end



function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		msg.post(".", "enable")
		msg.post(".", "acquire_input_focus")
	elseif message_id == hash("hide") then
		msg.post(".", "disable")
		msg.post(".", "release_input_focus")
	end
	
	if message_id == hash("audio") then
		
		self.sound = message.sound
		self.music = message.music
		
		if self.sound then
			gui.play_flipbook(gui.get_node("sound"), hash("soundon"))
		else
			gui.play_flipbook(gui.get_node("sound"), hash("soundoffpressed"))
		end
		if self.music then
			gui.play_flipbook(gui.get_node("music"), hash("musicon"))
		else
			gui.play_flipbook(gui.get_node("music"), hash("musicoffpressed"))
		end
	
	end
	
end


function on_input(self, action_id, action)
	if action_id == hash("click") and action.pressed then 
	
		if self.sound then
			msg.post("#soundclick", "play_sound") --, {delay = 1, gain = 0.5})
		end
	
        if gui.pick_node(gui.get_node("menu"), action.x, action.y) then
        	msg.post("main:/loader","loadthefuckingmenu")        
        end
        if gui.pick_node(gui.get_node("close"), action.x, action.y) then
         	msg.post("/controller", "hide_options_menu")
        end
        
        if gui.pick_node(gui.get_node("sound"), action.x, action.y) then
        	if self.sound then
        		gui.play_flipbook(gui.get_node("sound"), hash("soundoffpressed"))
        		self.sound = false
        	else
        		gui.play_flipbook(gui.get_node("sound"), hash("soundon"))
        		self.sound = true
        	end
        	msg.post("controller", "audio", { sound = self.sound, music = self.music })
        	
        end
        if gui.pick_node(gui.get_node("music"), action.x, action.y) then
        	if self.music then
        		gui.play_flipbook(gui.get_node("music"), hash("musicoffpressed"))
        		self.music = false
        	else
        		gui.play_flipbook(gui.get_node("music"), hash("musicon"))
        		self.music = true
        	end
        	msg.post("controller", "audio", { sound = self.sound, music = self.music })
        	
        end        
    end
    
    -- ##########################
    --[[
    if gui.pick_node(gui.get_node("sound"), action.x, action.y) then
     	if self.sound then 
			gui.play_flipbook(gui.get_node("sound"), hash("soundonpressed"))
		else
			gui.play_flipbook(gui.get_node("sound"), hash("soundoffpressed"))
		end
	else
		if self.sound then 
			gui.play_flipbook(gui.get_node("sound"), hash("soundon"))
		else
			gui.play_flipbook(gui.get_node("sound"), hash("soundoff"))
		end	
	end
    if gui.pick_node(gui.get_node("music"), action.x, action.y) then
     	if self.music then 
			gui.play_flipbook(gui.get_node("music"), hash("musiconpressed"))
		else
			gui.play_flipbook(gui.get_node("music"), hash("musicoffpressed"))
		end
	else
		if self.music then 
			gui.play_flipbook(gui.get_node("music"), hash("musicon"))
		else
			gui.play_flipbook(gui.get_node("music"), hash("musicoff"))
		end	
	end
	if gui.pick_node(gui.get_node("menu"), action.x, action.y) then
		gui.play_flipbook(gui.get_node("menu"), hash("menupressed"))
	else	
		gui.play_flipbook(gui.get_node("menu"), hash("menu"))
	end
    if gui.pick_node(gui.get_node("close"), action.x, action.y) then
		gui.play_flipbook(gui.get_node("close"), hash("closepressed"))
	else	
		gui.play_flipbook(gui.get_node("close"), hash("close"))
	end
    --]]
end


